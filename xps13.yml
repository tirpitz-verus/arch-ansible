---
- name: cofiguration for xps13
  hosts: localhost
  connection: local


  vars_prompt:
    - name: "my_password"
      prompt: "Enter password"
      private: yes


  tasks:

  - name: instal pgp
    become: yes
    pacman:
      name: gnupg

  - name: install zsh
    become: yes
    pacman:
      name: "{{ item }}"
      state: present
    loop:
      - zsh
      - zsh-completions
      - python-pexpect
  - name: check shell
    command: "echo $SHELL"
    register: my_shell
  - name: install oh-my-zsh
    expect:
      command: "curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh"
      responses:
        (?!)password: "{{ my_password }}"
    when: my_shell.stdout.find('/bin/zsh') == -1
  - name: define other zsh settings
    blockinfile:
      path: /home/marek/.zshrc
      block: |
        # aliases
        function lahst() {
            ls -lahst "$1"
        }

  - name: install wget
    become: yes
    pacman:
      name: wget
      state: present

  - name: create directory for scripts
    file:
      path: /home/marek/bin
      state: directory
  - name: create profile file
    copy:
      dest: /home/marek/.profile
      content: |
        export PATH=~/bin:$PATH
        
  - name: create directory for systemd user units
    file:
      path: /home/marek/.config/systemd/user
      state: directory
      owner: marek
      group: marek
  - name:
    copy:
      dest: /home/marek/.config/systemd/user/marek.targer
      content: |
        [Unit]
        Description=Marek's target
        
        [Install]
        Alias=default.target
      owner: marek
      group: marek

  - name: install docker
    become: yes
    pacman:
      name: "{{ item }}"
      state: present
    loop:
      - docker
      - docker-compose

  - name: install keepassxc
    become: yes
    pacman:
      name: keepassxc
      state: present

  - name: name install spotify (music player)
    become: yes
    become_user: marek
    aur:
      name: spotify
      skip_installed: false
  - name: create script for running spotify
    copy:
      dest: /home/marek/bin/spotify-hdpi
      content: spotify --force-device-scale-factor=2.0 %U
      mode: 0744

  - name: install dropbox 
    become: yes
    become_user: marek
    aur:
      name: dropbox
      skip_installed: false
  - name: create dropbox systemd unit
    copy:
      dest: /home/marek/.local/share/systemd/user/dropbox-marek.service
      content: |
        [Unit]
        Description=Dropbox service for marek
        
        [Service]
        Type=simple
        ExecStart=/home/marek/.dropbox-dist/dropboxd
        Restart=on-failure
        RestartSec=1
        Environment=DISPLAY=:0

        [Install]
        WantedBy=multi-user.target
      owner: marek
      group: marek
  - name: Register uid of user marek
    command: id -u marek
    register: user_uid
  - name: reload systemd
    become: yes
    become_user: marek
    command: systemctl --user daemon-reload
    environment:
      XDG_RUNTIME_DIR: /run/user/{{user_uid.stdout}}
  - name: enable dropbox service
    become: yes
    become_user: marek
    command: systemctl --user enable /home/marek/.local/share/systemd/user/dropbox-marek.service
    environment:
      XDG_RUNTIME_DIR: /run/user/{{user_uid.stdout}}

  - name: install keepassxc
    become: yes
    pacman:
      name: keepassxc
      state: present

  - name: install dolphin (file manager)
    become: true
    pacman:
      name: dolphin
      state: present

  - name: copy xinit
    template:
      src: xinitrc.j2
      dest: /home/marek/.xinitrc
      force: true

  - name: install feh (for wallpaper)
    become: yes
    pacman:
      name: feh
      state: present
  - name: run feh in i3
    blockinfile:
      path: /home/marek/.config/i3/config
      block: exec_always feh --bg-fill /home/marek/Pictures/wallpaper.jpg
      marker: "# {mark} ANSIBLE MANAGED BLOCK - wallpaper"

  - name: bind controlls in i3
    blockinfile:
      path:  /home/marek/.config/i3/config
      block: |
        # volume level
        bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% 
        bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%
        bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle
        # screen brightness
        bindsym XF86MonBrightnessUp exec xbacklight -inc 20
        bindsym XF86MonBrightnessDown exec xbacklight -dec 20
      marker: "# {mark} ANSIBLE MANAGED BLOCK - bind controlls"

  - name: rename i3 workspaces
    blockinfile:
      dest: /home/marek/.config/i3/config
      marker: "# {mark} ANSIBLE MANAGED BLOCK - workspace names"
      block: |
        set $ws1 "1:" 
        set $ws2 "2:"
        set $ws3 "3:"
        set $ws4 "4"
        set $ws5 "5"
        set $ws6 "6"
        set $ws7 "7"
        set $ws8 "8"
        set $ws9 "9"
        set $ws10 "10:"

  - name: bind applications to i3 workspaces
    blockinfile:
      path: /home/marek/.config/i3/config
      marker: "# {mark} ANSIBLE MANAGED BLOCK - bind applications"
      block: |
        assign [class="Terminator"] $ws1
        exec terminator
        assign [class="Firefox"] $ws2
        exec firefox
        assign [class="keepassxc"] $ws2
        exec keepassxc
        assign [class="jetbrains-idea"] $ws3
        assign [class="Spotify"] $ws10
        exec spotify-hdpi
  - name: install xorg-xprop (to get x window class names)
    become: yes
    pacman:
      name: xorg-xprop
      state: present
  - name: install font-awesome
    become: yes
    pacman:
      name: otf-font-awesome
      state: present

  - name: set Logitech MX Ergo acceleration
    lineinfile:
      path: /home/marek/.config/i3/config
      line: exec_always xinput --set-prop 10 'libinput Accel Speed' 1
  - name: install solaar
    become: yes
    pacman:
      name: solaar
      state: present
  - name: create group plugdev (to run solaar)
    become: yes
    group:
      name: plugdev
      state: present
  - name: add user to plugdev group
    user:
      name: marek
      groups: plugdev
      append: yes

  - name: install i3blocks
    become: yes
    pacman:
      name: i3blocks
      state: present    
  - name: setup i3blocks config
    template:
      dest: /home/marek/.config/i3/i3blocks.conf
      src: i3blocks_conf.j2
      force: true
  - name: replace i3status with i3blocks
    replace:
      path: /home/marek/.config/i3/config
      regexp: '^(.*status_command )i3status$'
      replace: \1i3blocks -c /home/marek/.config/i3/i3blocks.conf

  - name: protect id_rsa
    file:
      dest: /home/marek/.ssh/id_rsa
      mode: 0400

  - name: deja-dup - install
    become: yes
    pacman:
      name: "{{ item }}"
      state: present
    loop:
      - deja-dup
      - python-psutil
#   - name: deja-dup - include folders
#    dconf:
#      key: "/org/gnome/deja-dup/include-list"
#      value: "['/home/marek/Documents', '/home/marek/Dropbox']"
#      state: present
#  - name: deja-dup - turn on periodic backup
#    dconf:
#      key: "/org/gnome/deja-dup/periodic"
#      value: "true"
#      state: present
#  - name: deja-dup - set old files deletion time
#    dconf:
#      key: "/org/gnome/deja-dup/delete-after"
#      value: "365"
#      state: present
#  - name: deja-dup - save to remote
#    dconf:
#      key: "/org/gnome/deja-dup/backend"
#      value: "'remote'"
#      state: present
#  - name: deja-dup - set remote uri
#    dconf:
#      key: "/org/gnome/deja-dup/remote/uri"
#      value: "'ssh://192.168.0.241'"
#      state: present
#  - name: deja-dup - set remote folder
#    dconf:
#      key: "/org/gnome/deja-dup/remote/folder"
#      value: "'marek_xps'"
#      state: present

  - name: check if idea is installed
    stat:
      path: /opt/idea
    register: idea_dir
  - name: install openjdk
    become: yes
    pacman:
      name: "{{ item }}"
      state: present
    loop:
      - jre-openjdk
      - jdk-openjdk
      - openjdk-doc
      - java-openjfx 
      - java-openjfx-doc
      - gradle
      - jdk8-openjdk
  - name: download intellij idea
    get_url:
      url: https://download.jetbrains.com/idea/ideaIU-2018.3.tar.gz
      dest: /var/tmp/ideaIU.tar.gz
    when: idea_dir.stat.exists == False
  - name: create group idea
    become: yes
    group:
      name: idea
      state: present
  - name: add marek to idea
    become: yes
    user:
      name: marek
      groups: idea
      append: yes
  - name: create idea dir
    become: yes
    file:
      path: /opt/idea
      group: idea
      owner: root
      mode: g=rwx
      state: directory
  - name: unpack intellij
    become: yes
    when: idea_dir.stat.exists == False
    unarchive:
      src: /var/tmp/ideaIU.tar.gz
      dest: /opt/idea
      group: idea
      owner: root
      mode: g=rwx

  - name: install RandrR utils
    become: yes
    pacman:
      name: "{{ item }}"
      state: present
    loop:
      - xorg-xrandr
      - xorg-xbacklight
      - xorg-xinput

  - name: install prerequisits for persnal journal
    become: yes
    pacman:
      name: binutils
      state: present
  - name: install personal journal
    become: yes
    become_user: marek
    aur:
      name: rednotebook
      skip_installed: false

  - name: install document viwer
    become: yes
    pacman:
      name: xreader
      state: present

  - name: install typing trainer
    become: yes
    pacman:
      name: klavaro
      state: present

  - name: install libre office
    become: yes
    pacman:
      name: "{{ item }}"
      state: present
    loop:
      - libreoffice-still
      - libreoffice-still-pl
      - hunspell
      - hunspell-pl
      - hyphen 
      - hyphen-pl
#      - mythes
#      - mythes-pl

  - name: enable multilib
    become: yes
    blockinfile:
      path: /etc/pacman.conf
      block: |
        # enable multilib
        [multilib]
        Include = /etc/pacman.d/mirrorlist
  - name: install steam
    become: yes
    pacman:
      name: "{{ item }}"
      state: present
    loop:
      - lib32-gtk2
      - lib32-libva1
      - lib32-libva
      - lib32-libvdpau
      - steam
  
  - name: install unrar
    become: yes
    pacman:
      name: unrar
      state: present

  # vim
  - name: install pip3
    become: yes
    pacman:
      name: python-pip
      state: present
  - name: install powerline
    pip:
      name: powerline-status
  - name: create custom vimrc
    template:
      dest: /home/marek/.vimrc
      src: vimrc.j2
      force: true
      owner: marek
      group: marek

  - name: install comunicators
    become: yes
    become_user: marek
    aur:
      name: "{{ item }}"
      skip_installed: false
    loop:
      - slack-desktop
      - skypeforlinux-stable-bin
  - name: install communicators
    become: yes
    pacman:
      name: weechat
      state: present

  - name: install calculator
    become: yes
    pacman:
      name: calc
      state: present

  - name: install graphical software
    become: yes
    pacman:
      name: "{{ item }}"
      state: present
    loop:
      - gimp
      - sane
      - skanlite
      - krita
      - blender
      - deepin-screenshot

  - name: install calibre
    become: yes
    pacman:
      name: calibre
      state: present

  - name: install sc (spreadsheet calculator)
    become: yes
    pacman:
      name: sc
      state: present

  - name: install lynx
    become: yes
    pacman:
      name: lynx
      state: present

  - name: install gaming software
    become: yes
    pacman:
      name: "{{ item }}"
      state: present
    loop:
      - libldap
      - lib32-libldap
      - vulkan-intel
      - wine
      - wine_gecko
      - wine-mono
      - lutris
  - name: install dxvk-bin
    become: yes
    become_user: marek
    aur:
      name: dxvk-bin
      skip_installed: false

  - name: install JavaScript dev things
    become: yes
    pacman:
      name: "{{ item }}"
      state: present
    loop:
      - nodejs
      - npm

  - name: install system programming tools
    become: yes
    pacman:
      name: "{{ item }}"
      state: present
    loop:
      - make
      - cmake
      - gcc
      - vulkan-headers
      - vulkan-tools
      - vulkan-validation-layers
      - vulkan-extra-layers
      - vulkan-trace
   
  - name: setup git
    copy:
      dest: /home/marek/.gitconfig
      owner: marek
      group: marek
      mode: u=rw,g=rw,o=r
      content: |
        [user]
        email = tirpitz-verus@gmail.com
        name = Marek Lesiewski
        [core]
        editor=vim

  - name: stuff for RPG paper maker
    become: yes
    pacman:
      name: "{{ item }}"
      state: present
    loop:
      - gcc-libs
      - qt5-multimedia
      - openssl-1.0

  - name: install tuxguitar
    become: yes
    become_user: marek
    aur:
      name: tuxguitar
