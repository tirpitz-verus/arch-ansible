# developer - sets up all the stuff needed for developing software
# requires 'developers' dict
# developers:
#   <username>:
#     email: <email address>

- assert:
    that: developers is defined
    msg: "'developers' dict needs to be defined"

- name: install dependencies for development
  pacman:
    name: "{{ item }}"
    state: present
  loop:
    - git
    - vim
    # Java
    - jre-openjdk
    - jdk-openjdk
    - openjdk-doc
    - openjdk-src
    - java-openjfx 
    - java-openjfx-doc
    - java-openjfx-src
    - gradle
    - jdk11-openjdk
    - openjdk11-doc
    - openjdk11-src
    - jdk8-openjdk
    - openjdk8-doc
    - openjdk8-src
    - maven
    # docker
    - docker
    - docker-compose
    # javascript
    - nodejs
    - npm
    # C & C++
    - make
    - cmake
    - gcc
    # Vulkan
    - vulkan-headers
    - vulkan-tools
    - vulkan-validation-layers
    - vulkan-extra-layers
    - vulkan-trace

- name: install aur dependencies for development
  become_user: aur_builder
  aur:
    name: "{{ item }}"
    skip_installed: yes 
  loop:
    # testing
    - postman-bin

#
# groups
#
- name: create group groups
  group:
    name: "{{ item }}"
    state: present
  loop:
    # for common stuff like idea dir ownership
    - developers
    # to run docker without sudo
    - docker
- name: add users to groups
  user:
    name: "{{ item.key }}"
    groups: developers, docker
    append: yes
  loop: "{{ q('dict', developers) }}"


#
# start docker service
#
- name: start docker service
  systemd:
    name: docker
    state: started
    enabled: yes


#
# install Intellij IDEA
#
- name: check if idea is installed
  stat:
    path: /opt/idea
  register: idea_dir
  changed_when: False
- name: install idea
  block:
    - name: download intellij idea
      get_url:
        url: https://download.jetbrains.com/idea/ideaIU-2020.2.tar.gz
        dest: /tmp/ideaIU.tar.gz
    - name: create idea dir
      file:
        path: /opt/idea
        group: developers
        owner: root
        mode: g=rwx
        state: directory
    - name: unpack intellij
      unarchive:
        src: /tmp/ideaIU.tar.gz
        dest: /opt/idea
        group: developers
        owner: root
        mode: g=rwx
  when: idea_dir.stat.exists == False
- name: idea dir ownership
  file:
    path: /opt/idea
    group: developers
    owner: root
    mode: g=rwx
    recurse: yes
    state: directory
- name: create idea start script
  copy:
    src: idea.sh
    dest: ~{{ item.key }}/.local/bin/idea.sh
    owner: "{{ item.key }}"
    group: "{{ item.key }}"
    mode: +x
  loop: "{{ q('dict', developers) }}"


#
# setup git
#
- name: setup git
  copy:
    dest: ~{{ item.key }}/.gitconfig
    owner: "{{ item.key }}"
    group: "{{ item.key }}"
    mode: u=rw,g=rw,o=r
    content: |
      [user]
      email = "{{ item.value.email }}"
      name = "{{ item.value.fullname }}"
      [core]
      editor=vim
  loop: "{{ q('dict', developers) }}"


#
# install rust
#
- name: download Rust install script
  get_url:
    url: https://static.rust-lang.org/rustup.sh
    dest: /tmp/rustup.sh
    mode: +x
- name: run Rust install script
  # each user needs to run this script
  become_user: "{{ item.key }}"
  shell: /tmp/rustup.sh -y
  loop: "{{ q('dict', developers) }}"
- name: add cargo dir to users PATH
  lineinfile:
    path: ~{{ item.key }}/.profile
    line: '"PATH=$HOME/.cargo/bin:$PATH"'
  loop: "{{ q('dict', developers) }}"
