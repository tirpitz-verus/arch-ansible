---
- hosts: computor
  become_user: root
  become: yes
  gather_facts: False
  roles:
#    - accounts_setup
#    - essential_admin_tools
#    - with_network_cable
#    - in_poland
#    - with_hostname
#    - with_bluetooth
#    - with_battery
#    - with_sound
#    - with_SSD
#    - with_wifi
#    - with_swapfile
#    - with_GUI
#    - developer
#    - dropbox
#    - common_software
#    - office

  vars:
    with_GUI__is_4k: False
    with_GUI__dualscreen:
      right: DP-1
      left: eDP-1-1
    users_to_setup:
      - root
      - marek
    dropbox_users:
      - marek
    developers:
      marek:
        email: marek.lesiewski@ipfdigital.com
        fullname: Marek Lesiewski

  tasks:
    #
    # pritunl
    #
    - name: check if pritunl client installed
      shell: 'grep pritunl /etc/pacman.conf'
      register: pritunl_present
      changed_when: False
      ignore_errors: True
    - name: enable pritunl repository
      block:
        - name: add pritunl repository
          become: yes
          blockinfile:
            path: /etc/pacman.conf
            marker: "# {mark} ANSIBLE MANAGED BLOCK enable pritunl"
            block: |
              [pritunl]
              Server = https://repo.pritunl.com/stable/pacman
        - name: download pritunl key
          command: pacman-key --keyserver hkp://keyserver.ubuntu.com -r 7568D9BB55FF9E5287D586017AE645C0CF8E292A
        - name: sign pritunl key
          command: pacman-key --lsign-key 7568D9BB55FF9E5287D586017AE645C0CF8E292A
        - name: download pacman repos
          command: pacman -Sy
      when: pritunl_present.rc != 0
    - name: install pritunl client apps
      pacman:
        name: "{{ item }}"
        state: present
      loop:
        - pritunl-client-electron
        - pritunl-client-electron-numix-theme
    #
    # install MS Teams
    #
    - name: install ms teams
      aur:
        name: teams
      become_user: aur_builder

    #
    # power management
    #
    - name: prevent hibernation on lid close
      blockinfile:
        path: /etc/systemd/logind.conf
        marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        block: |
          HandleLidSwitch=ignore
          HandleLidSwitchExternalPower=ignore
          HandleLidSwitchDocked=ignore
          IdleAction=ignore
    - name: switch on bluetooth by default in TLP
      blockinfile:
        create: yes
        path: /etc/tlp.d/01-bluetooth-on-ac.conf
        block:
          DEVICES_TO_ENABLE_ON_AC="bluetooth"
    - name: set bluetooth policy to auto-enabled
      lineinfile:
        regexp: "^#AutoEnable=false$"
        state: present
        path: /etc/bluetooth/main.conf
        line: AutoEnable=true
    - name: set bluetooth policy to fast-connectable
      lineinfile:
        regexp: "^#FastConnectable=false$"
        state: present
        path: /etc/bluetooth/main.conf
        line: FastConnectable=true
    - name: enable bluetoothd
      systemd:
        name: bluetooth.service
        state: started
        enabled: yes


    #
    # configure graphics
    #
    - name: install nvidia drivers
      pacman:
        name: "{{ item }}"
        state: present
      loop:
        - nvidia
        - xorg-xhost
    - name: nvidia only x-org setup
      copy:
        dest: /etc/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf
        content: |
          Section "OutputClass"
             Identifier "intel"
             MatchDriver "i915"
             Driver "modesetting"
          EndSection

          Section "OutputClass"
            Identifier "nvidia"
            MatchDriver "nvidia-drm"
            Driver "nvidia"
            Option "AllowEmptyInitialConfiguration"
            Option "PrimaryGPU" "yes"
           ModulePath "/usr/lib/nvidia/xorg"
           ModulePath "/usr/lib/xorg/modules"
          EndSection
    - name: set pacman hook to update initramfs after an NVIDIA driver upgrade
      copy:
        dest: /etc/pacman.d/hooks/nvidia.hook
        content: |
          [Trigger]
          Operation=Install
          Operation=Upgrade
          Operation=Remove
          Type=Package
          Target=nvidia
          Target=linux
          # Change the linux part above and in the Exec line if a different kernel is used

          [Action]
          Description=Update Nvidia module in initcpio
          Depends=mkinitcpio
          When=PostTransaction
          NeedsTargets
          Exec=/bin/sh -c 'while read -r trg; do case $trg in linux) exit 0; esac; done; /usr/bin/mkinitcpio -P'
    - name: set xrandr settigs for XDM
      blockinfile:
        path: /etc/X11/xdm/archlinux/Xsetup
        marker: "# {mark} ANSIBLE MANAGED BLOCK enable xrandr settings"
        block: |
          xrandr --auto
    - name: set screen config for two screens
      blockinfile:
        path: /home/marek/.xinitrc
        marker: "# {mark} ANSIBLE MANAGED BLOCK set screen config for two screens"
        insertbefore: "^exec i3"
        block: |
          xrandr --setprovideroutputsource modesetting NVIDIA-0
          xrandr --output DP-0 --off --output DP-1 --mode 1920x1080 --pos 1920x0 --rotate normal --output DP-2 --off --output DP-3 --off --output DP-4 --off --output DP-5 --off --output eDP-1-1 --primary --mode 1920x1080 --pos 0x0 --rotate normal --output DP-1-1 --off --output HDMI-1-1 --off --output DP-1-2 --off
          xrandr --dpi 96
