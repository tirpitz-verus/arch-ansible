---
- hosts: computor
  become_user: root
  become: yes
  gather_facts: False
  roles:
    - accounts_setup
    - essential_admin_tools
    - with_network_cable
    - in_poland
    - with_hostname
    - with_bluetooth
    - with_battery
    - with_sound
    - with_SSD
    - with_wifi
    - with_swapfile
    - with_GUI
    - developer
    - dropbox
    - common_software
    - office

  vars:
    with_GUI__is_4k: False
    with_GUI__dualscreen:
      right: eDP1
      left: DP-1-1
    users_to_setup:
      - root
      - marek
    dropbox_users:
      - marek
    developers:
      marek:
        email: marek.lesiewski@ipfdigital.com
        fullname: Marek Lesiewski

  tasks:
    #
    # pritunl
    #
    - name: check if pritunl client installed
      shell: 'grep pritunl /etc/pacman.conf'
      register: pritunl_present
      changed_when: False
      ignore_errors: True
    - name: enable pritunl repository
      block:
        - name: add pritunl repository
          become: yes
          blockinfile:
            path: /etc/pacman.conf
            marker: "# {mark} ANSIBLE MANAGED BLOCK enable pritunl"
            block: |
              [pritunl]
              Server = https://repo.pritunl.com/stable/pacman
        - name: download pritunl key
          command: pacman-key --keyserver hkp://keyserver.ubuntu.com -r 7568D9BB55FF9E5287D586017AE645C0CF8E292A
        - name: sign pritunl key
          command: pacman-key --lsign-key 7568D9BB55FF9E5287D586017AE645C0CF8E292A
        - name: download pacman repos
          command: pacman -Sy
      when: pritunl_present.rc != 0
    - name: install pritunl client apps
      pacman:
        name: "{{ item }}"
        state: present
      loop:
        - pritunl-client-electron
        - pritunl-client-electron-numix-theme
    #
    # install MS Teams
    #
    - name: install ms teams
      aur:
        name: teams
      become_user: aur_builder

    #
    # power management
    #
    - name: prevent hibernation on lid close
      blockinfile:
        path: /etc/systemd/logind.conf
        marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        block: |
          HandleLidSwitch=ignore
          HandleLidSwitchExternalPower=ignore
          HandleLidSwitchDocked=ignore
          IdleAction=ignore

    #
    # configure graphics
    #
    - name: enable UXA in intel card
      copy:
        dest: /etc/X11/xorg.conf.d/20-intel.conf
        content: |
          Section "Device"
            Identifier "Intel Graphics"
            Driver "intel"
            Option "AccelMethod" "uxa"
            BusID "PCI:0:2:0"
          EndSection
    - name: remove xf86-video-nouveau
      pacman:
        name: xf86-video-nouveau
        state: absent
    - name: install nvidia drivers
      pacman:
        name: "{{ item }}"
        state: present
      loop:
        - nvidia
        #        - bumblebee
        - bbswitch
        - xorg-xhost
    - name: enable nvidia card in xorg
      copy:
        dest: /etc/X11/xorg.conf.d/20-nvidia.conf
        content: |
          Section "Device"
            Identifier "Nvidia Graphics"
            Driver "nvidia"
            BusID "PCI:1:0:0"
          EndSection
    #    - name: add users to group bumblebeed
    #      user:
    #        name: "{{ item }}"
    #        append: True
    #        groups: bumblebee
    #      loop: "{{ users_to_setup }}"
    #    - name: enable bumblebee
    #      systemd:
    #        name: bumblebeed
    #        state: started
    #        enabled: yes
    - name: set pacman hook to update initramfs after an NVIDIA driver upgrade
      copy:
        dest: /etc/pacman.d/hooks/nvidia.hook
        content: |
          [Trigger]
          Operation=Install
          Operation=Upgrade
          Operation=Remove
          Type=Package
          Target=nvidia
          Target=linux
          # Change the linux part above and in the Exec line if a different kernel is used

          [Action]
          Description=Update Nvidia module in initcpio
          Depends=mkinitcpio
          When=PostTransaction
          NeedsTargets
          Exec=/bin/sh -c 'while read -r trg; do case $trg in linux) exit 0; esac; done; /usr/bin/mkinitcpio -P'
